type User {
  _id: String!
  username: String!
  password: String!
  fullname: String!
	site: SITES!
  role: ROLES!
}

input CreateUserInput {
  username: String!
  password: String!
  fullname: String!
  site: SITES!
}

input LoginUserInput {
  username: String!
  password: String!
}

type Query {
  users: [User!]
  user(id: String!): User
  verifyToken(token: String!): User
}


type Mutation {
  register(input: CreateUserInput!): User!
  login(input: LoginUserInput!): LoginResponse!
}

type LoginResponse {
	token: String!
}

enum ROLES {
  USER
  ADMIN
}

enum SITES {
  SG
  NT
  DN
}